{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3207472a",
   "metadata": {},
   "source": [
    "# The Effect of Leaders on Exchange Rates"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe0abf48",
   "metadata": {},
   "source": [
    "The dataset we'll use describes Euro daily exchange rates between 1999 and 2021. The euro (symbolized with â‚¬) is the official currency in most of the countries of the European Union. We will be focusing on UK Pound Sterling vs Euro in this analysis. \n",
    "\n",
    "Our aim here is to analyse the data over the years when different prime ministers have lead the United Kingdom. We will see the effect different leaders have played on the exchange rate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8f5bbe86",
   "metadata": {},
   "outputs": [],
   "source": [
    "#import in modules\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a092fa82",
   "metadata": {},
   "outputs": [],
   "source": [
    "#read in data set\n",
    "exchange_rates = pd.read_csv('/Users/yasmeenmahomedy2/Downloads/Datasets/euro-daily-hist_1999_2020.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c1dc99c0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 5781 entries, 0 to 5780\n",
      "Data columns (total 41 columns):\n",
      " #   Column                    Non-Null Count  Dtype  \n",
      "---  ------                    --------------  -----  \n",
      " 0   Period\\Unit:              5781 non-null   object \n",
      " 1   [Australian dollar ]      5781 non-null   object \n",
      " 2   [Bulgarian lev ]          5379 non-null   object \n",
      " 3   [Brazilian real ]         5513 non-null   object \n",
      " 4   [Canadian dollar ]        5781 non-null   object \n",
      " 5   [Swiss franc ]            5781 non-null   object \n",
      " 6   [Chinese yuan renminbi ]  5513 non-null   object \n",
      " 7   [Cypriot pound ]          2346 non-null   object \n",
      " 8   [Czech koruna ]           5781 non-null   object \n",
      " 9   [Danish krone ]           5781 non-null   object \n",
      " 10  [Estonian kroon ]         3130 non-null   object \n",
      " 11  [UK pound sterling ]      5781 non-null   object \n",
      " 12  [Greek drachma ]          520 non-null    object \n",
      " 13  [Hong Kong dollar ]       5781 non-null   object \n",
      " 14  [Croatian kuna ]          5513 non-null   object \n",
      " 15  [Hungarian forint ]       5781 non-null   object \n",
      " 16  [Indonesian rupiah ]      5781 non-null   object \n",
      " 17  [Israeli shekel ]         5513 non-null   object \n",
      " 18  [Indian rupee ]           5513 non-null   object \n",
      " 19  [Iceland krona ]          3374 non-null   float64\n",
      " 20  [Japanese yen ]           5781 non-null   object \n",
      " 21  [Korean won ]             5781 non-null   object \n",
      " 22  [Lithuanian litas ]       4159 non-null   object \n",
      " 23  [Latvian lats ]           3904 non-null   object \n",
      " 24  [Maltese lira ]           2346 non-null   object \n",
      " 25  [Mexican peso ]           5781 non-null   object \n",
      " 26  [Malaysian ringgit ]      5781 non-null   object \n",
      " 27  [Norwegian krone ]        5781 non-null   object \n",
      " 28  [New Zealand dollar ]     5781 non-null   object \n",
      " 29  [Philippine peso ]        5781 non-null   object \n",
      " 30  [Polish zloty ]           5781 non-null   object \n",
      " 31  [Romanian leu ]           5719 non-null   float64\n",
      " 32  [Russian rouble ]         5781 non-null   object \n",
      " 33  [Swedish krona ]          5781 non-null   object \n",
      " 34  [Singapore dollar ]       5781 non-null   object \n",
      " 35  [Slovenian tolar ]        2085 non-null   object \n",
      " 36  [Slovak koruna ]          2608 non-null   object \n",
      " 37  [Thai baht ]              5781 non-null   object \n",
      " 38  [Turkish lira ]           5719 non-null   float64\n",
      " 39  [US dollar ]              5781 non-null   object \n",
      " 40  [South African rand ]     5781 non-null   object \n",
      "dtypes: float64(3), object(38)\n",
      "memory usage: 1.8+ MB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Period\\Unit:</th>\n",
       "      <th>[Australian dollar ]</th>\n",
       "      <th>[Bulgarian lev ]</th>\n",
       "      <th>[Brazilian real ]</th>\n",
       "      <th>[Canadian dollar ]</th>\n",
       "      <th>[Swiss franc ]</th>\n",
       "      <th>[Chinese yuan renminbi ]</th>\n",
       "      <th>[Cypriot pound ]</th>\n",
       "      <th>[Czech koruna ]</th>\n",
       "      <th>[Danish krone ]</th>\n",
       "      <th>...</th>\n",
       "      <th>[Romanian leu ]</th>\n",
       "      <th>[Russian rouble ]</th>\n",
       "      <th>[Swedish krona ]</th>\n",
       "      <th>[Singapore dollar ]</th>\n",
       "      <th>[Slovenian tolar ]</th>\n",
       "      <th>[Slovak koruna ]</th>\n",
       "      <th>[Thai baht ]</th>\n",
       "      <th>[Turkish lira ]</th>\n",
       "      <th>[US dollar ]</th>\n",
       "      <th>[South African rand ]</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-05-06</td>\n",
       "      <td>1.5547</td>\n",
       "      <td>1.9558</td>\n",
       "      <td>6.4707</td>\n",
       "      <td>1.4764</td>\n",
       "      <td>1.0953</td>\n",
       "      <td>7.8054</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25.847</td>\n",
       "      <td>7.4360</td>\n",
       "      <td>...</td>\n",
       "      <td>4.9264</td>\n",
       "      <td>89.8825</td>\n",
       "      <td>10.1940</td>\n",
       "      <td>1.6096</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.7120</td>\n",
       "      <td>10.0490</td>\n",
       "      <td>1.2060</td>\n",
       "      <td>17.2081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-05-05</td>\n",
       "      <td>1.5510</td>\n",
       "      <td>1.9558</td>\n",
       "      <td>6.5174</td>\n",
       "      <td>1.4731</td>\n",
       "      <td>1.0965</td>\n",
       "      <td>7.7636</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25.825</td>\n",
       "      <td>7.4360</td>\n",
       "      <td>...</td>\n",
       "      <td>4.9271</td>\n",
       "      <td>89.7964</td>\n",
       "      <td>10.1945</td>\n",
       "      <td>1.6035</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.3660</td>\n",
       "      <td>10.0174</td>\n",
       "      <td>1.2005</td>\n",
       "      <td>17.3013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-05-04</td>\n",
       "      <td>1.5608</td>\n",
       "      <td>1.9558</td>\n",
       "      <td>6.5785</td>\n",
       "      <td>1.4836</td>\n",
       "      <td>1.0980</td>\n",
       "      <td>7.8136</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25.841</td>\n",
       "      <td>7.4361</td>\n",
       "      <td>...</td>\n",
       "      <td>4.9275</td>\n",
       "      <td>90.2438</td>\n",
       "      <td>10.1673</td>\n",
       "      <td>1.6073</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.4750</td>\n",
       "      <td>10.0110</td>\n",
       "      <td>1.2021</td>\n",
       "      <td>17.4433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-05-03</td>\n",
       "      <td>1.5573</td>\n",
       "      <td>1.9558</td>\n",
       "      <td>6.5507</td>\n",
       "      <td>1.4807</td>\n",
       "      <td>1.1016</td>\n",
       "      <td>7.7967</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25.773</td>\n",
       "      <td>7.4365</td>\n",
       "      <td>...</td>\n",
       "      <td>4.9269</td>\n",
       "      <td>90.7472</td>\n",
       "      <td>10.1803</td>\n",
       "      <td>1.6044</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.5650</td>\n",
       "      <td>10.0087</td>\n",
       "      <td>1.2044</td>\n",
       "      <td>17.3953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-04-30</td>\n",
       "      <td>1.5581</td>\n",
       "      <td>1.9558</td>\n",
       "      <td>6.4597</td>\n",
       "      <td>1.4834</td>\n",
       "      <td>1.0998</td>\n",
       "      <td>7.8134</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25.883</td>\n",
       "      <td>7.4360</td>\n",
       "      <td>...</td>\n",
       "      <td>4.9285</td>\n",
       "      <td>90.7108</td>\n",
       "      <td>10.1640</td>\n",
       "      <td>1.6045</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.6480</td>\n",
       "      <td>9.9777</td>\n",
       "      <td>1.2082</td>\n",
       "      <td>17.3875</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Period\\Unit: [Australian dollar ] [Bulgarian lev ] [Brazilian real ]  \\\n",
       "0   2021-05-06               1.5547           1.9558            6.4707   \n",
       "1   2021-05-05               1.5510           1.9558            6.5174   \n",
       "2   2021-05-04               1.5608           1.9558            6.5785   \n",
       "3   2021-05-03               1.5573           1.9558            6.5507   \n",
       "4   2021-04-30               1.5581           1.9558            6.4597   \n",
       "\n",
       "  [Canadian dollar ] [Swiss franc ] [Chinese yuan renminbi ] [Cypriot pound ]  \\\n",
       "0             1.4764         1.0953                   7.8054              NaN   \n",
       "1             1.4731         1.0965                   7.7636              NaN   \n",
       "2             1.4836         1.0980                   7.8136              NaN   \n",
       "3             1.4807         1.1016                   7.7967              NaN   \n",
       "4             1.4834         1.0998                   7.8134              NaN   \n",
       "\n",
       "  [Czech koruna ] [Danish krone ]  ... [Romanian leu ] [Russian rouble ]  \\\n",
       "0          25.847          7.4360  ...          4.9264           89.8825   \n",
       "1          25.825          7.4360  ...          4.9271           89.7964   \n",
       "2          25.841          7.4361  ...          4.9275           90.2438   \n",
       "3          25.773          7.4365  ...          4.9269           90.7472   \n",
       "4          25.883          7.4360  ...          4.9285           90.7108   \n",
       "\n",
       "  [Swedish krona ] [Singapore dollar ] [Slovenian tolar ] [Slovak koruna ]  \\\n",
       "0          10.1940              1.6096                NaN              NaN   \n",
       "1          10.1945              1.6035                NaN              NaN   \n",
       "2          10.1673              1.6073                NaN              NaN   \n",
       "3          10.1803              1.6044                NaN              NaN   \n",
       "4          10.1640              1.6045                NaN              NaN   \n",
       "\n",
       "  [Thai baht ] [Turkish lira ] [US dollar ]  [South African rand ]  \n",
       "0      37.7120         10.0490       1.2060                17.2081  \n",
       "1      37.3660         10.0174       1.2005                17.3013  \n",
       "2      37.4750         10.0110       1.2021                17.4433  \n",
       "3      37.5650         10.0087       1.2044                17.3953  \n",
       "4      37.6480          9.9777       1.2082                17.3875  \n",
       "\n",
       "[5 rows x 41 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#brief look at dataset\n",
    "exchange_rates.info()\n",
    "\n",
    "exchange_rates.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "72357918",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Period\\Unit:</th>\n",
       "      <th>[Australian dollar ]</th>\n",
       "      <th>[Bulgarian lev ]</th>\n",
       "      <th>[Brazilian real ]</th>\n",
       "      <th>[Canadian dollar ]</th>\n",
       "      <th>[Swiss franc ]</th>\n",
       "      <th>[Chinese yuan renminbi ]</th>\n",
       "      <th>[Cypriot pound ]</th>\n",
       "      <th>[Czech koruna ]</th>\n",
       "      <th>[Danish krone ]</th>\n",
       "      <th>...</th>\n",
       "      <th>[Romanian leu ]</th>\n",
       "      <th>[Russian rouble ]</th>\n",
       "      <th>[Swedish krona ]</th>\n",
       "      <th>[Singapore dollar ]</th>\n",
       "      <th>[Slovenian tolar ]</th>\n",
       "      <th>[Slovak koruna ]</th>\n",
       "      <th>[Thai baht ]</th>\n",
       "      <th>[Turkish lira ]</th>\n",
       "      <th>[US dollar ]</th>\n",
       "      <th>[South African rand ]</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5776</th>\n",
       "      <td>1999-01-08</td>\n",
       "      <td>1.8406</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.7643</td>\n",
       "      <td>1.6138</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.58187</td>\n",
       "      <td>34.938</td>\n",
       "      <td>7.4433</td>\n",
       "      <td>...</td>\n",
       "      <td>1.3143</td>\n",
       "      <td>27.2075</td>\n",
       "      <td>9.1650</td>\n",
       "      <td>1.9537</td>\n",
       "      <td>188.8400</td>\n",
       "      <td>42.560</td>\n",
       "      <td>42.5590</td>\n",
       "      <td>0.3718</td>\n",
       "      <td>1.1659</td>\n",
       "      <td>6.7855</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5777</th>\n",
       "      <td>1999-01-07</td>\n",
       "      <td>1.8474</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.7602</td>\n",
       "      <td>1.6165</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.58187</td>\n",
       "      <td>34.886</td>\n",
       "      <td>7.4431</td>\n",
       "      <td>...</td>\n",
       "      <td>1.3092</td>\n",
       "      <td>26.9876</td>\n",
       "      <td>9.1800</td>\n",
       "      <td>1.9436</td>\n",
       "      <td>188.8000</td>\n",
       "      <td>42.765</td>\n",
       "      <td>42.1678</td>\n",
       "      <td>0.3701</td>\n",
       "      <td>1.1632</td>\n",
       "      <td>6.8283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5778</th>\n",
       "      <td>1999-01-06</td>\n",
       "      <td>1.8820</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.7711</td>\n",
       "      <td>1.6116</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.58200</td>\n",
       "      <td>34.850</td>\n",
       "      <td>7.4452</td>\n",
       "      <td>...</td>\n",
       "      <td>1.3168</td>\n",
       "      <td>27.4315</td>\n",
       "      <td>9.3050</td>\n",
       "      <td>1.9699</td>\n",
       "      <td>188.7000</td>\n",
       "      <td>42.778</td>\n",
       "      <td>42.6949</td>\n",
       "      <td>0.3722</td>\n",
       "      <td>1.1743</td>\n",
       "      <td>6.7307</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5779</th>\n",
       "      <td>1999-01-05</td>\n",
       "      <td>1.8944</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.7965</td>\n",
       "      <td>1.6123</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.58230</td>\n",
       "      <td>34.917</td>\n",
       "      <td>7.4495</td>\n",
       "      <td>...</td>\n",
       "      <td>1.3168</td>\n",
       "      <td>26.5876</td>\n",
       "      <td>9.4025</td>\n",
       "      <td>1.9655</td>\n",
       "      <td>188.7750</td>\n",
       "      <td>42.848</td>\n",
       "      <td>42.5048</td>\n",
       "      <td>0.3728</td>\n",
       "      <td>1.1790</td>\n",
       "      <td>6.7975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5780</th>\n",
       "      <td>1999-01-04</td>\n",
       "      <td>1.9100</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.8004</td>\n",
       "      <td>1.6168</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.58231</td>\n",
       "      <td>35.107</td>\n",
       "      <td>7.4501</td>\n",
       "      <td>...</td>\n",
       "      <td>1.3111</td>\n",
       "      <td>25.2875</td>\n",
       "      <td>9.4696</td>\n",
       "      <td>1.9554</td>\n",
       "      <td>189.0450</td>\n",
       "      <td>42.991</td>\n",
       "      <td>42.6799</td>\n",
       "      <td>0.3723</td>\n",
       "      <td>1.1789</td>\n",
       "      <td>6.9358</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Period\\Unit: [Australian dollar ] [Bulgarian lev ] [Brazilian real ]  \\\n",
       "5776   1999-01-08               1.8406              NaN               NaN   \n",
       "5777   1999-01-07               1.8474              NaN               NaN   \n",
       "5778   1999-01-06               1.8820              NaN               NaN   \n",
       "5779   1999-01-05               1.8944              NaN               NaN   \n",
       "5780   1999-01-04               1.9100              NaN               NaN   \n",
       "\n",
       "     [Canadian dollar ] [Swiss franc ] [Chinese yuan renminbi ]  \\\n",
       "5776             1.7643         1.6138                      NaN   \n",
       "5777             1.7602         1.6165                      NaN   \n",
       "5778             1.7711         1.6116                      NaN   \n",
       "5779             1.7965         1.6123                      NaN   \n",
       "5780             1.8004         1.6168                      NaN   \n",
       "\n",
       "     [Cypriot pound ] [Czech koruna ] [Danish krone ]  ... [Romanian leu ]  \\\n",
       "5776          0.58187          34.938          7.4433  ...          1.3143   \n",
       "5777          0.58187          34.886          7.4431  ...          1.3092   \n",
       "5778          0.58200          34.850          7.4452  ...          1.3168   \n",
       "5779          0.58230          34.917          7.4495  ...          1.3168   \n",
       "5780          0.58231          35.107          7.4501  ...          1.3111   \n",
       "\n",
       "     [Russian rouble ] [Swedish krona ] [Singapore dollar ]  \\\n",
       "5776           27.2075           9.1650              1.9537   \n",
       "5777           26.9876           9.1800              1.9436   \n",
       "5778           27.4315           9.3050              1.9699   \n",
       "5779           26.5876           9.4025              1.9655   \n",
       "5780           25.2875           9.4696              1.9554   \n",
       "\n",
       "     [Slovenian tolar ] [Slovak koruna ] [Thai baht ] [Turkish lira ]  \\\n",
       "5776           188.8400           42.560      42.5590          0.3718   \n",
       "5777           188.8000           42.765      42.1678          0.3701   \n",
       "5778           188.7000           42.778      42.6949          0.3722   \n",
       "5779           188.7750           42.848      42.5048          0.3728   \n",
       "5780           189.0450           42.991      42.6799          0.3723   \n",
       "\n",
       "     [US dollar ]  [South African rand ]  \n",
       "5776       1.1659                 6.7855  \n",
       "5777       1.1632                 6.8283  \n",
       "5778       1.1743                 6.7307  \n",
       "5779       1.1790                 6.7975  \n",
       "5780       1.1789                 6.9358  \n",
       "\n",
       "[5 rows x 41 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "exchange_rates.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc46c4f7",
   "metadata": {},
   "source": [
    "## Cleaning Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "60a91f98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       0.86708\n",
       "1       0.86274\n",
       "2       0.86770\n",
       "3       0.86838\n",
       "4       0.86863\n",
       "         ...   \n",
       "5776    0.70940\n",
       "5777    0.70585\n",
       "5778    0.70760\n",
       "5779    0.71220\n",
       "5780    0.71110\n",
       "Name: [UK pound sterling ], Length: 5781, dtype: object"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking the uk pound sterling column data\n",
    "exchange_rates.iloc[:,11]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d15ea1df",
   "metadata": {},
   "outputs": [],
   "source": [
    "#rename time and us dollar columns\n",
    "exchange_rates.rename(columns={'[UK pound sterling ]': 'uk_pound',\n",
    "                               'Period\\\\Unit:': 'Time'},\n",
    "                      inplace=True)            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "507b4d41",
   "metadata": {},
   "outputs": [],
   "source": [
    "#change time column to datetime format\n",
    "exchange_rates['Time'] = pd.to_datetime(exchange_rates['Time'])\n",
    "\n",
    "#sort time ascendingly\n",
    "exchange_rates.sort_values('Time', inplace=True)\n",
    "\n",
    "#reset index\n",
    "exchange_rates.reset_index(drop=True, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "da175c51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.71110\n",
       "1    0.71220\n",
       "2    0.70760\n",
       "3    0.70585\n",
       "4    0.70940\n",
       "Name: uk_pound, dtype: object"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "exchange_rates['uk_pound'].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8c726a44",
   "metadata": {},
   "outputs": [],
   "source": [
    "#isolate time and dollar columns, then assign to variable\n",
    "euro_to_pound = exchange_rates[['Time' , 'uk_pound']].copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a20c4c05",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>uk_pound</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1999-01-04</td>\n",
       "      <td>0.71110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1999-01-05</td>\n",
       "      <td>0.71220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1999-01-06</td>\n",
       "      <td>0.70760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1999-01-07</td>\n",
       "      <td>0.70585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1999-01-08</td>\n",
       "      <td>0.70940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5776</th>\n",
       "      <td>2021-04-30</td>\n",
       "      <td>0.86863</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5777</th>\n",
       "      <td>2021-05-03</td>\n",
       "      <td>0.86838</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5778</th>\n",
       "      <td>2021-05-04</td>\n",
       "      <td>0.86770</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5779</th>\n",
       "      <td>2021-05-05</td>\n",
       "      <td>0.86274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5780</th>\n",
       "      <td>2021-05-06</td>\n",
       "      <td>0.86708</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5781 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Time uk_pound\n",
       "0    1999-01-04  0.71110\n",
       "1    1999-01-05  0.71220\n",
       "2    1999-01-06  0.70760\n",
       "3    1999-01-07  0.70585\n",
       "4    1999-01-08  0.70940\n",
       "...         ...      ...\n",
       "5776 2021-04-30  0.86863\n",
       "5777 2021-05-03  0.86838\n",
       "5778 2021-05-04  0.86770\n",
       "5779 2021-05-05  0.86274\n",
       "5780 2021-05-06  0.86708\n",
       "\n",
       "[5781 rows x 2 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "euro_to_pound"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6dc519d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-          62\n",
       "0.87750     7\n",
       "0.90430     7\n",
       "0.68880     7\n",
       "0.63040     7\n",
       "           ..\n",
       "0.91610     1\n",
       "0.63030     1\n",
       "0.75030     1\n",
       "0.60940     1\n",
       "0.88405     1\n",
       "Name: uk_pound, Length: 3517, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "euro_to_pound['uk_pound'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "14242dd6",
   "metadata": {},
   "source": [
    "There are 62 '-' characters, which we will have to remove."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "28e6f835",
   "metadata": {},
   "outputs": [],
   "source": [
    "#dropping '-' values in uk column\n",
    "euro_to_pound = euro_to_pound[euro_to_pound['uk_pound'] != '-']\n",
    "\n",
    "#convert pound column to float\n",
    "euro_to_pound['uk_pound'] = euro_to_pound['uk_pound'].astype(float)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e9e4b1f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 5719 entries, 0 to 5780\n",
      "Data columns (total 2 columns):\n",
      " #   Column    Non-Null Count  Dtype         \n",
      "---  ------    --------------  -----         \n",
      " 0   Time      5719 non-null   datetime64[ns]\n",
      " 1   uk_pound  5719 non-null   float64       \n",
      "dtypes: datetime64[ns](1), float64(1)\n",
      "memory usage: 134.0 KB\n"
     ]
    }
   ],
   "source": [
    "euro_to_pound.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d4f1787",
   "metadata": {},
   "source": [
    "## Rolling Mean"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc835abd",
   "metadata": {},
   "source": [
    "We will generate a line plot to visualize the evolution of the euro-pound exchange rate. We will use a period of 30 days for the rolling mean."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c95bc66c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f89bcda7670>]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "#plot without rolling mean\n",
    "plt.plot(euro_to_pound['Time'],\n",
    "         euro_to_pound['uk_pound'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "064206b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#create rolling mean column in euro_to_pound column\n",
    "euro_to_pound['rolling_mean'] = euro_to_pound['uk_pound'].rolling(30).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "4cb8b4f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>uk_pound</th>\n",
       "      <th>rolling_mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1999-01-04</td>\n",
       "      <td>0.71110</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1999-01-05</td>\n",
       "      <td>0.71220</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1999-01-06</td>\n",
       "      <td>0.70760</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1999-01-07</td>\n",
       "      <td>0.70585</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1999-01-08</td>\n",
       "      <td>0.70940</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5776</th>\n",
       "      <td>2021-04-30</td>\n",
       "      <td>0.86863</td>\n",
       "      <td>0.862611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5777</th>\n",
       "      <td>2021-05-03</td>\n",
       "      <td>0.86838</td>\n",
       "      <td>0.863032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5778</th>\n",
       "      <td>2021-05-04</td>\n",
       "      <td>0.86770</td>\n",
       "      <td>0.863368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5779</th>\n",
       "      <td>2021-05-05</td>\n",
       "      <td>0.86274</td>\n",
       "      <td>0.863382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5780</th>\n",
       "      <td>2021-05-06</td>\n",
       "      <td>0.86708</td>\n",
       "      <td>0.863552</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5719 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Time  uk_pound  rolling_mean\n",
       "0    1999-01-04   0.71110           NaN\n",
       "1    1999-01-05   0.71220           NaN\n",
       "2    1999-01-06   0.70760           NaN\n",
       "3    1999-01-07   0.70585           NaN\n",
       "4    1999-01-08   0.70940           NaN\n",
       "...         ...       ...           ...\n",
       "5776 2021-04-30   0.86863      0.862611\n",
       "5777 2021-05-03   0.86838      0.863032\n",
       "5778 2021-05-04   0.86770      0.863368\n",
       "5779 2021-05-05   0.86274      0.863382\n",
       "5780 2021-05-06   0.86708      0.863552\n",
       "\n",
       "[5719 rows x 3 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "euro_to_pound"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "575e81f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(euro_to_pound['Time'] ,euro_to_pound['rolling_mean'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b2c6a15",
   "metadata": {},
   "source": [
    "## Plotting The Graph"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6bb99c21",
   "metadata": {},
   "source": [
    "The terms of the prime ministers are as follows:\n",
    "* David Cameron, 11 May 2010 - 13 July 2016\n",
    "* Theresa May, 13 July 2016 - 24 July 2019\n",
    "* Borris Johnson, 24 July 2019 - present"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "6ec05b76",
   "metadata": {},
   "outputs": [],
   "source": [
    "#adding the FiveThirtyEight style\n",
    "import matplotlib.style as style\n",
    "style.use('fivethirtyeight')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "04bdded7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>uk_pound</th>\n",
       "      <th>rolling_mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2870</th>\n",
       "      <td>2010-01-04</td>\n",
       "      <td>0.89140</td>\n",
       "      <td>0.900764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2871</th>\n",
       "      <td>2010-01-05</td>\n",
       "      <td>0.90045</td>\n",
       "      <td>0.900808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2872</th>\n",
       "      <td>2010-01-06</td>\n",
       "      <td>0.89860</td>\n",
       "      <td>0.900736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2873</th>\n",
       "      <td>2010-01-07</td>\n",
       "      <td>0.89960</td>\n",
       "      <td>0.900619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2874</th>\n",
       "      <td>2010-01-08</td>\n",
       "      <td>0.89340</td>\n",
       "      <td>0.900296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5689</th>\n",
       "      <td>2020-12-24</td>\n",
       "      <td>0.89795</td>\n",
       "      <td>0.901644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5690</th>\n",
       "      <td>2020-12-28</td>\n",
       "      <td>0.90408</td>\n",
       "      <td>0.901886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5691</th>\n",
       "      <td>2020-12-29</td>\n",
       "      <td>0.90863</td>\n",
       "      <td>0.902234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5692</th>\n",
       "      <td>2020-12-30</td>\n",
       "      <td>0.90307</td>\n",
       "      <td>0.902474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5693</th>\n",
       "      <td>2020-12-31</td>\n",
       "      <td>0.89903</td>\n",
       "      <td>0.902651</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2816 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Time  uk_pound  rolling_mean\n",
       "2870 2010-01-04   0.89140      0.900764\n",
       "2871 2010-01-05   0.90045      0.900808\n",
       "2872 2010-01-06   0.89860      0.900736\n",
       "2873 2010-01-07   0.89960      0.900619\n",
       "2874 2010-01-08   0.89340      0.900296\n",
       "...         ...       ...           ...\n",
       "5689 2020-12-24   0.89795      0.901644\n",
       "5690 2020-12-28   0.90408      0.901886\n",
       "5691 2020-12-29   0.90863      0.902234\n",
       "5692 2020-12-30   0.90307      0.902474\n",
       "5693 2020-12-31   0.89903      0.902651\n",
       "\n",
       "[2816 rows x 3 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#isolate data by 2016-2021 which are the years we're analysing\n",
    "cam_may_jon = euro_to_pound.copy()[ (euro_to_pound['Time'].dt.year >= 2010)& (euro_to_pound['Time'].dt.year < 2021)]\n",
    "cam_may_jon\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "98fbc586",
   "metadata": {},
   "outputs": [],
   "source": [
    "#isolate data by person\n",
    "cam = cam_may_jon.copy()[ cam_may_jon['Time'].dt.year < 2016 ]\n",
    "may = cam_may_jon.copy()[ (cam_may_jon['Time'].dt.year >= 2016) & (cam_may_jon['Time'].dt.year <2019) ]\n",
    "jon = cam_may_jon.copy()[ cam_may_jon['Time'].dt.year >= 2019 ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "07b717fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>uk_pound</th>\n",
       "      <th>rolling_mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2870</th>\n",
       "      <td>2010-01-04</td>\n",
       "      <td>0.89140</td>\n",
       "      <td>0.900764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2871</th>\n",
       "      <td>2010-01-05</td>\n",
       "      <td>0.90045</td>\n",
       "      <td>0.900808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2872</th>\n",
       "      <td>2010-01-06</td>\n",
       "      <td>0.89860</td>\n",
       "      <td>0.900736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2873</th>\n",
       "      <td>2010-01-07</td>\n",
       "      <td>0.89960</td>\n",
       "      <td>0.900619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2874</th>\n",
       "      <td>2010-01-08</td>\n",
       "      <td>0.89340</td>\n",
       "      <td>0.900296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4410</th>\n",
       "      <td>2015-12-24</td>\n",
       "      <td>0.73420</td>\n",
       "      <td>0.715360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4411</th>\n",
       "      <td>2015-12-28</td>\n",
       "      <td>0.73535</td>\n",
       "      <td>0.716304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4412</th>\n",
       "      <td>2015-12-29</td>\n",
       "      <td>0.74005</td>\n",
       "      <td>0.717445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4413</th>\n",
       "      <td>2015-12-30</td>\n",
       "      <td>0.73799</td>\n",
       "      <td>0.718655</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4414</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>0.73395</td>\n",
       "      <td>0.719757</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1537 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Time  uk_pound  rolling_mean\n",
       "2870 2010-01-04   0.89140      0.900764\n",
       "2871 2010-01-05   0.90045      0.900808\n",
       "2872 2010-01-06   0.89860      0.900736\n",
       "2873 2010-01-07   0.89960      0.900619\n",
       "2874 2010-01-08   0.89340      0.900296\n",
       "...         ...       ...           ...\n",
       "4410 2015-12-24   0.73420      0.715360\n",
       "4411 2015-12-28   0.73535      0.716304\n",
       "4412 2015-12-29   0.74005      0.717445\n",
       "4413 2015-12-30   0.73799      0.718655\n",
       "4414 2015-12-31   0.73395      0.719757\n",
       "\n",
       "[1537 rows x 3 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cam"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ea148b69",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-29-9d5818d25124>:13: UserWarning: FixedFormatter should only be used together with FixedLocator\n",
      "  ax1.set_xticklabels(['','2010','', '2012', '', '2014', '', '2016'], alpha=0.3)\n",
      "<ipython-input-29-9d5818d25124>:14: UserWarning: FixedFormatter should only be used together with FixedLocator\n",
      "  ax1.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'] , alpha=0.5)\n",
      "<ipython-input-29-9d5818d25124>:20: UserWarning: FixedFormatter should only be used together with FixedLocator\n",
      "  ax2.set_xticklabels(['2016','', '','', '2017', '' ,'','', '2018'], alpha=0.3)\n",
      "<ipython-input-29-9d5818d25124>:21: UserWarning: FixedFormatter should only be used together with FixedLocator\n",
      "  ax2.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'] , alpha=0.5)\n",
      "<ipython-input-29-9d5818d25124>:28: UserWarning: FixedFormatter should only be used together with FixedLocator\n",
      "  ax3.set_xticklabels(['','2019','', '', '2020','', '','2021'], alpha=0.3)\n",
      "<ipython-input-29-9d5818d25124>:29: UserWarning: FixedFormatter should only be used together with FixedLocator\n",
      "  ax3.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'] , alpha=0.5)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x432 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#grid chart layout\n",
    "plt.figure(figsize = (13,6))\n",
    "ax1 = plt.subplot(2,3,1)\n",
    "ax2 =plt.subplot(2,3,2)\n",
    "ax3 = plt.subplot(2,3,3)\n",
    "ax4 = plt.subplot(2,1,2)\n",
    "\n",
    "axes = [ax1, ax2, ax3, ax4]\n",
    "\n",
    "\n",
    "#ax1 - cameron\n",
    "ax1.plot(cam['Time'], cam['rolling_mean'], color= '#57cc99')\n",
    "ax1.set_xticklabels(['','2010','', '2012', '', '2014', '', '2016'], alpha=0.3)\n",
    "ax1.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'] , alpha=0.5)\n",
    "ax1.text(15150,0.95 , 'CAMERON', size=20, weight='bold', color= '#57cc99')\n",
    "ax1.text(15205,0.925 , '(2010-2006)', size=15, weight='bold', alpha=0.3)\n",
    "\n",
    "#ax2 -  may\n",
    "ax2.plot(may['Time'], may['rolling_mean'], color= '#8ecae6')\n",
    "ax2.set_xticklabels(['2016','', '','', '2017', '' ,'','', '2018'], alpha=0.3)\n",
    "ax2.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'] , alpha=0.5)\n",
    "ax2.text(17250,0.96 , 'MAY', size=20, weight='bold', color= '#8ecae6')\n",
    "ax2.text(17090,0.935 , '(2016-2018)', size=15, weight='bold', alpha=0.3)\n",
    "\n",
    "#ax3 - johnson\n",
    "ax3.plot(jon['Time'], jon['rolling_mean'])\n",
    "ax3.plot(jon['Time'], jon['rolling_mean'], color= '#adc178')\n",
    "ax3.set_xticklabels(['','2019','', '', '2020','', '','2021'], alpha=0.3)\n",
    "ax3.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'] , alpha=0.5)\n",
    "ax3.text(18095,0.93, 'JOHNSON', size=20, weight='bold', color= '#adc178')\n",
    "ax3.text(18040,0.921 , '(2019 - present)', size=15, weight='bold', alpha=0.3)\n",
    "\n",
    "\n",
    "#ax4 - all\n",
    "ax4.plot(cam_may_jon['Time'], cam_may_jon['rolling_mean'])\n",
    "ax4.plot(jon['Time'], jon['rolling_mean'], color= '#adc178')\n",
    "ax4.plot(may['Time'], may['rolling_mean'], color= '#8ecae6')\n",
    "ax4.plot(cam['Time'], cam['rolling_mean'], color= '#57cc99')\n",
    "ax4.set_xticks([])\n",
    "\n",
    "#main title and subtitle\n",
    "ax1.text(14300,1.081, 'EURO-GBP rate averaged over 3 prime ministers', size=30, weight='bold')\n",
    "ax1.text(14300,1.03, 'EURO-GBP exchange rates over David Cameron, Theresa May, and Borris Johnson', size=20, alpha=0.6)\n",
    "\n",
    "#signature\n",
    "ax4.text(14320,0.654, 'Yasmeen Mahomedy' + ' '*104 + 'Source: European Central Bank',\n",
    "        color = '#f0f0f0', backgroundcolor = '#4d4d4d',\n",
    "        size=14)\n",
    "\n",
    "\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69594402",
   "metadata": {},
   "source": [
    "# Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1653fe08",
   "metadata": {},
   "source": [
    "We can see duing David Cameron's leadership the value of the pound steeply dropped. This could be because of Brexit rumours. The value then picks up as Theresa May comes into office.\n",
    "Borris Johnson's leadership has had a few flutuations, but this can be attributed to covid-19 which severely affected the economy since 2019. The depreciation of the pound could be linked to the first and second waves of covid-19. The UK also exited the European Union on the 1st of February 2020, which could explain the massive decrease in early 2020."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "04b34268",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
